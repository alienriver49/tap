{"version":3,"sources":["environment.ts","main.ts","resources/index.ts","C:/Users/lisie/Desktop/next-ui-poc/src/models/IExtensionLoadingInfo.js","tap-fx/event-bus.ts","shell/shell.ts","resources/binding-behaviors/intercept.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot('shell/shell'));\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,"interface Subscription {\r\n    unsubscribe: () => void;\r\n}\r\n\r\ninterface EventBusConfiguration {\r\n    enableCrossOriginEvents: boolean;\r\n}\r\n\r\nexport class EventBus {\r\n    constructor({ config = { enableCrossOriginEvents: true } } = {}) {\r\n        if (config.enableCrossOriginEvents) {\r\n            window.addEventListener('message', this.onWindowMessage, false);\r\n        }\r\n        this._config = config;\r\n    }\r\n\r\n    private static _instance: EventBus;\r\n\r\n    private _config: EventBusConfiguration;\r\n\r\n    private _subscriptionLookup: { [eventId: string]: Function[] } = {};\r\n\r\n    private inIFrame(): boolean {\r\n        try {\r\n            return window.self !== window.top;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private onWindowMessage = ((message: any): void => {\r\n        if (message && message.data) {\r\n            this.notifySubscriber(message.data.eventId, message.data.eventData);\r\n        }\r\n    }).bind(this);\r\n\r\n    private notifySubscriber(eventId: string, data?: any) {\r\n        let subscriptions = this._subscriptionLookup[eventId];\r\n        if (subscriptions) {\r\n            subscriptions = subscriptions.slice();\r\n            let i = subscriptions.length;\r\n            while (i--) {\r\n                try {\r\n                    subscriptions[i](data, eventId);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDefault() {\r\n        let instance = this._instance || (this._instance = new EventBus());\r\n        return instance;\r\n    }\r\n\r\n    subscribe(eventId: string, callback: Function): Subscription {\r\n        if (!eventId || typeof eventId !== 'string') {\r\n            throw new Error('Event type was invalid.');\r\n        }\r\n\r\n        let subscribers = this._subscriptionLookup[eventId] || (this._subscriptionLookup[eventId] = []);\r\n        subscribers.push(callback);\r\n\r\n        return {\r\n            unsubscribe: (): void => {\r\n                let index = subscribers.indexOf(callback);\r\n                if (index !== -1) {\r\n                    subscribers.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    publish(eventId: string, data?: any): void {\r\n        if (!eventId || typeof eventId !== 'string') {\r\n            throw new Error('Event type was invalid.');\r\n        }\r\n\r\n        this.notifySubscriber(eventId, data);\r\n\r\n        if (this._config.enableCrossOriginEvents) {\r\n            let message = {\r\n                eventId: eventId,\r\n                eventData: data\r\n            };\r\n\r\n            // publish to parent iFrame\r\n            if (this.inIFrame()) {\r\n                window.parent.postMessage(message, '*');\r\n            }\r\n\r\n            // publish to child iFrames\r\n            let i = window.frames.length;\r\n            while (i--) {\r\n                window.frames[i].postMessage(message, '*');\r\n            }\r\n        }\r\n    }\r\n}","import { IExtensionLoadingInfo } from './../models/IExtensionLoadingInfo'\r\nimport { EventBus } from './../tap-fx/event-bus'\r\n\r\nexport class Shell {\r\n    constructor() { }\r\n\r\n    private readonly BASE_URL = 'src/'\r\n\r\n    private _subscriptions: any = [];\r\n\r\n    private fakeExtension1Load(): IExtensionLoadingInfo {\r\n        let extensionLoadingInfo = {\r\n            id: 'extension-1',\r\n            files: [\r\n                `${this.BASE_URL}/extensions/extension-1/event-bus.js`,\r\n                `${this.BASE_URL}/extensions/extension-1/main.js`,\r\n            ]\r\n        }\r\n\r\n        return extensionLoadingInfo;\r\n    }\r\n\r\n    private interceptModelUpdate(method, update, value) {\r\n        console.log('THE UPDATED VALUE IS', value);\r\n        update(value);\r\n        // if (value && (value as string).toLowerCase() === 'are you getting this?') {\r\n        //     (document.querySelector('#sheath-1') as HTMLIFrameElement).contentWindow.postMessage({\r\n        //         value: value\r\n        //     }, 'http://localhost:9000/');\r\n        // }\r\n    }\r\n\r\n    private handleNewBladeMessage(message: any): void {\r\n        console.log('SHELL', 'RECEIVE', 'extension.new-blade', message);\r\n    }\r\n\r\n    extensions: string[] = [];\r\n\r\n    activate(params, routeConfig) {\r\n        console.log('SHELL: activate');\r\n        this.registerEventBus();\r\n    }\r\n\r\n    loadExtension(id: string): void {\r\n        let extensionLoadingInfo: IExtensionLoadingInfo;\r\n\r\n        switch (id) {\r\n            case '1':\r\n                extensionLoadingInfo = this.fakeExtension1Load();\r\n                break;\r\n\r\n            default: throw new Error('Unknow extension ID specified.');\r\n        }\r\n\r\n        let iFrame = document.createElement('iframe');\r\n        iFrame.setAttribute('id', extensionLoadingInfo.id);\r\n        iFrame.setAttribute('src', 'about:blank');\r\n\r\n        document.querySelector('#extension-iframes').appendChild(iFrame);\r\n\r\n        extensionLoadingInfo.files.forEach((filePath) => {\r\n            let scriptTag = iFrame.contentWindow.document.createElement('script');\r\n            scriptTag.setAttribute('type', 'text/javascript');\r\n            scriptTag.setAttribute('src', filePath);\r\n\r\n            iFrame.contentWindow.document.body.appendChild(scriptTag);\r\n        });\r\n\r\n        this.extensions.push(extensionLoadingInfo.id);\r\n    }\r\n\r\n    unloadExtension(id: string): void {\r\n    }\r\n\r\n    registerEventBus(): void {\r\n        this._subscriptions.push(EventBus.getDefault().subscribe('extension.new-blade', this.handleNewBladeMessage));\r\n    }\r\n\r\n    unregisterEventBus(): void {\r\n        while (this._subscriptions.length) {\r\n            this._subscriptions.pop().unsubscribe();\r\n        }\r\n    }\r\n}","const interceptMethods = ['updateTarget', 'updateSource', 'callSource'];\n\nexport class InterceptBindingBehavior {\n\n  bind(binding, source, interceptor) {\n    console.log('THIS IS EXCITING: ABOUT TO BIND', binding, interceptor);\n    let i = interceptMethods.length;\n    while (i--) {\n      let method = interceptMethods[i];\n      if (!binding[method]) {\n        continue;\n      }\n      binding[`intercepted-${method}`] = binding[method];\n      let update = binding[method].bind(binding);\n      binding[method] = interceptor.bind(binding, method, update);\n    }\n  }\n\n  unbind(binding, source) {\n    console.log('THIS IS EXCITING: ABOUT TO UNBIND', binding, source);\n    let i = interceptMethods.length;\n    while (i--) {\n      let method = interceptMethods[i];\n      if (!binding[method]) {\n        continue;\n      }\n      binding[method] = binding[`intercepted-${method}`];\n      binding[`intercepted-${method}`] = null;\n    }\n  }\n}\n\n"],"sourceRoot":"../src"}