{"version":3,"sources":["environment.ts","main.ts","app/app.ts","resources/index.ts","resources/binding-behaviors/intercept.ts"],"names":[],"mappings":";;;IAAA,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACzD,CAAC;IAdD,8BAcC;;;;;;ICnBD;QACI;YAEQ,mBAAc,GAAQ,EAAE,CAAC;YAuBjC,eAAU,GAAa,EAAE,CAAC;QAzBV,CAAC;QAIT,gCAAkB,GAA1B;YACI,IAAI,oBAAoB,GAAG;gBACvB,EAAE,EAAE,aAAa;gBACjB,KAAK,EAAE;oBACH,8BAA8B;oBAC9B,uDAAuD;iBAC1D;aACJ,CAAA;YACD,MAAM,CAAC,oBAAoB,CAAC;QAChC,CAAC;QAEO,kCAAoB,GAA5B,UAA6B,MAAM,EAAE,MAAM,EAAE,KAAK;YAC9C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,CAAC;QAMlB,CAAC;QAID,2BAAa,GAAb,UAAc,EAAU;YACpB,IAAI,oBAA2C,CAAC;YAEhD,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACT,KAAK,GAAG;oBACJ,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBACjD,KAAK,CAAC;gBAEV,SAAS,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;YAC/D,CAAC;YAED,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;YAE1C,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAEjE,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ;gBACxC,IAAI,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACtE,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;gBAClD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAExC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAEnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAClD,CAAC;QACL,UAAC;IAAD,CAzDA,AAyDC,IAAA;IAzDY,kBAAG;;;;;;ICHhB,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;ICJD,IAAM,gBAAgB,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IAExE;QAAA;QA4BA,CAAC;QA1BC,uCAAI,GAAJ,UAAK,OAAO,EAAE,MAAM,EAAE,WAAW;YAC/B,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC;YAChC,OAAO,CAAC,EAAE,EAAE,CAAC;gBACX,IAAI,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACrB,QAAQ,CAAC;gBACX,CAAC;gBACD,OAAO,CAAC,iBAAe,MAAQ,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;gBACnD,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3C,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC;QAED,yCAAM,GAAN,UAAO,OAAO,EAAE,MAAM;YACpB,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAClE,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC;YAChC,OAAO,CAAC,EAAE,EAAE,CAAC;gBACX,IAAI,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACrB,QAAQ,CAAC;gBACX,CAAC;gBACD,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,iBAAe,MAAQ,CAAC,CAAC;gBACnD,OAAO,CAAC,iBAAe,MAAQ,CAAC,GAAG,IAAI,CAAC;YAC1C,CAAC;QACH,CAAC;QACH,+BAAC;IAAD,CA5BA,AA4BC,IAAA;IA5BY,4DAAwB","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot('app/app'));\n}\n","interface IExtensionLoadingInfo {\r\n    id: string;\r\n    files: string[];\r\n}\r\n\r\nexport class App {\r\n    constructor() { }\r\n\r\n    private _subscriptions: any = [];\r\n\r\n    private fakeExtension1Load(): IExtensionLoadingInfo {\r\n        let extensionLoadingInfo = {\r\n            id: 'extension-1',\r\n            files: [\r\n                'dist-tap-fx/tap-fx-bundle.js',\r\n                'dist-tap-extensions/extension-1/extension-1-bundle.js',\r\n            ]\r\n        }\r\n        return extensionLoadingInfo;\r\n    }\r\n\r\n    private interceptModelUpdate(method, update, value) {\r\n        console.log('THE UPDATED VALUE IS', value);\r\n        update(value);\r\n        // if (value && (value as string).toLowerCase() === 'are you getting this?') {\r\n        //     (document.querySelector('#sheath-1') as HTMLIFrameElement).contentWindow.postMessage({\r\n        //         value: value\r\n        //     }, 'http://localhost:9000/');\r\n        // }\r\n    }\r\n\r\n    extensions: string[] = [];\r\n\r\n    loadExtension(id: string): void {\r\n        let extensionLoadingInfo: IExtensionLoadingInfo;\r\n\r\n        switch (id) {\r\n            case '1':\r\n                extensionLoadingInfo = this.fakeExtension1Load();\r\n                break;\r\n\r\n            default: throw new Error('Unknow extension ID specified.');\r\n        }\r\n\r\n        let iFrame = document.createElement('iframe');\r\n        iFrame.setAttribute('id', extensionLoadingInfo.id);\r\n        iFrame.setAttribute('src', 'about:blank');\r\n\r\n        document.querySelector('#extension-iframes').appendChild(iFrame);\r\n\r\n        extensionLoadingInfo.files.forEach((filePath) => {\r\n            let scriptTag = iFrame.contentWindow.document.createElement('script');\r\n            scriptTag.setAttribute('type', 'text/javascript');\r\n            scriptTag.setAttribute('src', filePath);\r\n\r\n            iFrame.contentWindow.document.body.appendChild(scriptTag);\r\n        });\r\n\r\n        iFrame.setAttribute('sandbox', '');\r\n\r\n        this.extensions.push(extensionLoadingInfo.id);\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","const interceptMethods = ['updateTarget', 'updateSource', 'callSource'];\n\nexport class InterceptBindingBehavior {\n\n  bind(binding, source, interceptor) {\n    console.log('THIS IS EXCITING: ABOUT TO BIND', binding, interceptor);\n    let i = interceptMethods.length;\n    while (i--) {\n      let method = interceptMethods[i];\n      if (!binding[method]) {\n        continue;\n      }\n      binding[`intercepted-${method}`] = binding[method];\n      let update = binding[method].bind(binding);\n      binding[method] = interceptor.bind(binding, method, update);\n    }\n  }\n\n  unbind(binding, source) {\n    console.log('THIS IS EXCITING: ABOUT TO UNBIND', binding, source);\n    let i = interceptMethods.length;\n    while (i--) {\n      let method = interceptMethods[i];\n      if (!binding[method]) {\n        continue;\n      }\n      binding[method] = binding[`intercepted-${method}`];\n      binding[`intercepted-${method}`] = null;\n    }\n  }\n}\n\n"],"sourceRoot":"../src"}